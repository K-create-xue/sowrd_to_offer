给定一个二叉搜索树, 找到该树中两个指定节点的最近公共祖先。
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
    if(!root) return NULL;
    if(root==p||root==q)
    return root;
    if(root->val>p->val && root->val<q->val)
    return root;
    else if(root->val<p->val &&root->val>q->val)
	return root;
    else if(root->val>p->val)
    return lowestCommonAncestor(root->left,p,q);
    else{
        return lowestCommonAncestor(root->right,p,q);
    }
    return NULL;

    
  
    /*
    if(!root) return NULL;
    if(root==p||root==q)
    return root;
    if(root->val<p->val&&root->val<q->val){
        return lowestCommonAncestor(root->right,p ,q);
    }else if(root->val>p->val&&root->val>q->val){
        return lowestCommonAncestor(root->left,p,q); 
    }else
    return root;
      */  
        
        
        
        // if(!root) return NULL;
        // if(root==p||root==q)
        // return root;
        // TreeNode *_left=lowestCommonAncestor(root->left,p,q);
        // TreeNode *_right=lowestCommonAncestor(root->right,p,q);
        // if(_left!=NULL&&_right!=NULL) 
        // return root;
        // else if(_right!=NULL)
        // return _right;
        // else return _left;
        // return NULL;
    }
};
